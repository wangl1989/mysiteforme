<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mysiteforme.admin.dao.BlogArticleDao" >
    <sql id="select">
        a.id,
        a.title,
        a.sub_title     AS "subTitle",
        a.marks,
        a.show_pic      AS "showPic",
        a.category,
        a.out_link_url  AS "outLinkUrl",
        a.resources,
        a.publist_time  AS "publistTime",
        a.content,
        a.text,
        a.click,
        a.channel_id    AS "channelId",
        a.sort,
        a.is_top        AS "isTop",
        a.is_recommend  AS "isRecommend",
        a.status,
        a.create_date   AS "createDate",
        a.create_by     AS "createId",
        a.update_date   AS "updateDate",
        a.update_by     AS "updateId",
        a.remarks,
        (select count(*) from blog_comment c where c.del_flag = false and c.article_id = a.id) AS "commentCount"
    </sql>

    <!-- 这儿定义一个resultMap -->
    <resultMap id="baseMap" type="com.mysiteforme.admin.entity.BlogArticle">
        <id column="id" property="id" />
        <result column="title" property="title" />
        <result column="subTitle" property="subTitle" />
        <result column="marks" property="marks" />
        <result column="showPic" property="showPic" />
        <result column="category" property="category" />
        <result column="outLinkUrl" property="outLinkUrl" />
        <result column="resources" property="resources" />
        <result column="publistTime" property="publistTime" />
        <result column="content" property="content" />
        <result column="click" property="click" />
        <result column="channelId" property="channelId" />
        <result column="sort" property="sort" />
        <result column="isTop" property="top" />
        <result column="isRecommend" property="recommend" />
        <result column="status" property="status" />
        <result property="createId" column="createId"/>
        <result property="createDate" column="createDate"/>
        <result property="updateId" column="updateId"/>
        <result property="updateDate" column="updateDate"/>
        <result property="remarks" column="remarks"/>
        <result property="delFlag" column="delFlag"/>
        <result property="commentCount" column="commentCount"/>
    </resultMap>

    <resultMap id="indexMap" extends="baseMap" type="com.mysiteforme.admin.entity.BlogArticle">
        <association property="blogChannel" column="channelId" javaType="com.mysiteforme.admin.entity.BlogChannel">
            <id property="id" column="blogChannel.id"/>
            <result property="name" column="blogChannel.name"/>
            <result property="sort" column="blogChannel.sort"/>
            <result property="href" column="blogChannel.href"/>
        </association>
        <collection property="blogTags" ofType="com.mysiteforme.admin.entity.BlogTags">
            <id property="id" column="blogTags.id"/>
            <result property="name" column="blogTags.name" />
        </collection>
    </resultMap>

    <select id="selectIndexArticle"  resultMap="indexMap">
        SELECT
        <include refid="select"/>,
        c.id            AS "blogChannel.id",
        c.name          AS "blogChannel.name",
        c.sort          AS "blogChannel.sort",
        c.href          AS "blogChannel.href",
        t.id            AS "blogTags.id",
        t.name          AS "blogTags.name"
        from
        (select article.* from
        blog_article article
        left join blog_channel channel on channel.id = article.channel_id
        where
        article.del_flag = false and
        channel.is_base_channel = TRUE
        limit #{limit}) a
        left join blog_channel c on c.id = a.channel_id
        left join blog_article_tags bat on bat.article_id = a.id
        left join blog_tags t on t.id = bat.tags_id
        <if test="orderList != null and orderList.size()>0">
            ORDER BY
            <foreach collection="orderList" index="index" item="item">
                <if test="index != 0">
                     ,
                </if>
                ${item} DESC
            </foreach>
        </if>
    </select>


    <select id="selectDetailArticle" resultType="com.mysiteforme.admin.entity.BlogArticle" parameterType="java.util.Map">
        select
        <include refid="select"/>,
        c.id            AS "blogChannel.id",
        c.parent_id     AS "blogChannel.parentId",
        c.parent_ids    AS "blogChannel.parentIds",
        c.href          AS "blogChannel.href",
        c.name          AS "blogChannel.name",
        c.is_base_channel AS "blogChannel.baseChannel",
        c.can_comment   AS "blogChannel.canComment",
        c.is_no_name    AS "blogChannel.isNoName",
        c.sort          AS "blogChannel.sort"
        FROM
        blog_article a
        left join blog_channel c on c.id = a.channel_id
        where a.del_flag = false
        <if test="params.id != null and params.id != 0">
            and a.id = #{params.id}
        </if>
        <if test="params.title != null and params.title != ''">
            and a.title like concat('%',#{params.title},'%')
        </if>
        <if test="params.category != null and params.category != ''">
            and a.category = #{params.category}
        </if>
        <if test="params.beginPublistTime != null">
            and a.publist_time &gt;= #{params.beginPublistTime}
        </if>
        <if test="params.endPublistTime != null">
            and a.publist_time &lt;= #{params.endPublistTime}
        </if>
        <if test="params.content != null and params.content != ''">
            and a.content like concat('%',#{params.content},'%')
        </if>
        <if test="params.isBaseChannel != null and params.isBaseChannel == true">
            and c.is_base_channel = true
        </if>
        <if test="params.channelId != null and params.channelId != 0">
            <choose>
                <when test="params.channelId == -1 or params.channelId == 0">
                    and a.channel_id is null
                </when>
                <otherwise>
                    and a.channel_id = #{params.channelId}
                </otherwise>
            </choose>
        </if>
        <if test="params.rootId != null and params.rootId != ''">
            and c.parent_ids like concat(#{params.rootId},'%')
        </if>
        ORDER BY
        is_top DESC,
        is_recommend DESC,
        publist_time DESC,
        sort DESC
    </select>





    <select id="saveArticleTags" parameterType="java.util.Map">
        insert INTO blog_article_tags(article_id, tags_id)
        VALUES
        <foreach collection="tags" item="item" index="index" separator=",">
            (#{articleId},#{item.id})
        </foreach>
    </select>

    <select id="removeArticleTags" parameterType="java.lang.Long">
        delete from blog_article_tags where article_id = #{articleId}
    </select>

    <select id="selectNewCommentArticle" resultType="com.mysiteforme.admin.entity.BlogArticle" parameterType="java.lang.Integer">
        select
        <include refid="select"/>,
        c.create_date as "newestCommentTime"
        from blog_article a
        right join
        (select * from(select * from blog_comment where del_flag = FALSE and type = 1 ORDER BY article_id,create_date desc limit 100000000) m GROUP BY m.article_id ) c on c.article_id = a.id
        where a.del_flag = FALSE
        GROUP BY a.id
        order by c.create_date desc
        limit #{limit}
    </select>


    <select id="selectLikeSameWithTags" resultType="com.mysiteforme.admin.entity.BlogArticle">
      SELECT * from blog_article a RIGHT JOIN
        (select * from blog_article_tags where tags_id in ( select tags_id from blog_article_tags where article_id = #{articleId} ) GROUP BY article_id) at on at.article_id = a.id
      RIGHT JOIN blog_channel c on c.id = a.channel_id
      where c.is_base_channel = true and c.del_flag = false
      and a.del_flag = false
      and a.id != #{articleId}
      order by
      a.is_top DESC,
      a.is_recommend DESC,
      a.publist_time DESC
      limit #{limit}
    </select>
</mapper>